/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.citd.UI;

import com.citd.DAO.ChuyenDeDAO;
import com.citd.DAO.HocVienDAO;
import com.citd.DAO.KhoaHocDAO;
import com.citd.DAO.NguoiHocDAO;
import com.citd.Entity.ChuyenDe;
import com.citd.Entity.HocVien;
import com.citd.Entity.KhoaHoc;
import com.citd.Entity.NguoiHoc;
import java.awt.Color;
import java.awt.Dimension;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import com.citd.uitls.Auth;
import com.citd.uitls.HeaderColor;
import com.citd.uitls.MsgBox;
import com.citd.uitls.XImage;

/**
 *
 * @author Admin
 */
public class HocVienJFrame extends javax.swing.JFrame {

    /**
     * Creates new form HocVienJFrame
     */
    public HocVienJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btng1 = new javax.swing.ButtonGroup();
        pnlBackGround = new javax.swing.JPanel();
        lblChuyenDe = new javax.swing.JLabel();
        pnlChuyenDe = new javax.swing.JPanel();
        cboChuyenDe = new javax.swing.JComboBox<>();
        lblKhoaHoc = new javax.swing.JLabel();
        pnlKhoaHoc = new javax.swing.JPanel();
        cboKhoaHoc = new javax.swing.JComboBox<>();
        tabs = new javax.swing.JTabbedPane();
        pnlHocVien = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHocVien = new javax.swing.JTable();
        btnUpdateeDiem = new javax.swing.JButton();
        btnRemoveHocVien = new javax.swing.JButton();
        rdoTatCa = new javax.swing.JRadioButton();
        rdoCoDiem = new javax.swing.JRadioButton();
        rdoChuaDiem = new javax.swing.JRadioButton();
        pnlNguoiHoc = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        btnAddHocVien = new javax.swing.JButton();
        pnlTimKiem = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÍ HỌC VIÊN");

        pnlBackGround.setBackground(new java.awt.Color(255, 255, 255));

        lblChuyenDe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChuyenDe.setText("Chuyên đề");

        pnlChuyenDe.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N

        cboChuyenDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cboChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChuyenDeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChuyenDeLayout = new javax.swing.GroupLayout(pnlChuyenDe);
        pnlChuyenDe.setLayout(pnlChuyenDeLayout);
        pnlChuyenDeLayout.setHorizontalGroup(
            pnlChuyenDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyenDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboChuyenDe, 0, 266, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlChuyenDeLayout.setVerticalGroup(
            pnlChuyenDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyenDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblKhoaHoc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblKhoaHoc.setText("Khóa Học");

        cboKhoaHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cboKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaHocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlKhoaHocLayout = new javax.swing.GroupLayout(pnlKhoaHoc);
        pnlKhoaHoc.setLayout(pnlKhoaHocLayout);
        pnlKhoaHocLayout.setHorizontalGroup(
            pnlKhoaHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhoaHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboKhoaHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlKhoaHocLayout.setVerticalGroup(
            pnlKhoaHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhoaHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N

        pnlHocVien.setBackground(new java.awt.Color(255, 204, 255));

        tblHocVien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblHocVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "TT", "Mã HV", "Mã NH", "Họ tên", "Điểm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHocVien.setFocusable(false);
        tblHocVien.setRowHeight(40);
        tblHocVien.setSelectionBackground(new java.awt.Color(0, 0, 255));
        tblHocVien.setSelectionForeground(new java.awt.Color(255, 255, 153));
        tblHocVien.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblHocVien);

        btnUpdateeDiem.setBackground(new java.awt.Color(51, 255, 255));
        btnUpdateeDiem.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnUpdateeDiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citd/Image/Sua.png"))); // NOI18N
        btnUpdateeDiem.setText("Cập nhật điểm");
        btnUpdateeDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateeDiemActionPerformed(evt);
            }
        });

        btnRemoveHocVien.setBackground(new java.awt.Color(51, 255, 255));
        btnRemoveHocVien.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnRemoveHocVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citd/Image/Xoa.png"))); // NOI18N
        btnRemoveHocVien.setText("Xóa khỏi khóa học");
        btnRemoveHocVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveHocVienActionPerformed(evt);
            }
        });

        rdoTatCa.setBackground(new java.awt.Color(255, 204, 255));
        btng1.add(rdoTatCa);
        rdoTatCa.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rdoTatCa.setSelected(true);
        rdoTatCa.setText("Tất Cả");
        rdoTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTatCaActionPerformed(evt);
            }
        });

        rdoCoDiem.setBackground(new java.awt.Color(255, 204, 255));
        btng1.add(rdoCoDiem);
        rdoCoDiem.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rdoCoDiem.setText("Có Điểm");
        rdoCoDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoCoDiemActionPerformed(evt);
            }
        });

        rdoChuaDiem.setBackground(new java.awt.Color(255, 204, 255));
        btng1.add(rdoChuaDiem);
        rdoChuaDiem.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rdoChuaDiem.setText("Chưa Điểm");
        rdoChuaDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoChuaDiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHocVienLayout = new javax.swing.GroupLayout(pnlHocVien);
        pnlHocVien.setLayout(pnlHocVienLayout);
        pnlHocVienLayout.setHorizontalGroup(
            pnlHocVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHocVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoTatCa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoCoDiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdoChuaDiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemoveHocVien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateeDiem)
                .addContainerGap())
        );
        pnlHocVienLayout.setVerticalGroup(
            pnlHocVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHocVienLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(pnlHocVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateeDiem)
                    .addComponent(btnRemoveHocVien)
                    .addComponent(rdoTatCa)
                    .addComponent(rdoCoDiem)
                    .addComponent(rdoChuaDiem))
                .addContainerGap())
        );

        tabs.addTab("Học Viên", new javax.swing.ImageIcon(getClass().getResource("/com/citd/Image/HocVienIcon.png")), pnlHocVien); // NOI18N

        pnlNguoiHoc.setBackground(new java.awt.Color(255, 204, 255));

        tblNguoiHoc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã NH", "Họ Và Tên", "Giới Tính", "Ngày Sinh", "Điện Thoại", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.setFocusable(false);
        tblNguoiHoc.setRowHeight(40);
        tblNguoiHoc.setSelectionBackground(new java.awt.Color(0, 0, 255));
        tblNguoiHoc.setSelectionForeground(new java.awt.Color(255, 255, 153));
        tblNguoiHoc.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblNguoiHoc);

        btnAddHocVien.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnAddHocVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citd/Image/Them.png"))); // NOI18N
        btnAddHocVien.setText("Thêm vào khóa học");
        btnAddHocVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHocVienActionPerformed(evt);
            }
        });

        pnlTimKiem.setBackground(new java.awt.Color(204, 255, 204));
        pnlTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 14), new java.awt.Color(102, 51, 255))); // NOI18N

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlTimKiemLayout = new javax.swing.GroupLayout(pnlTimKiem);
        pnlTimKiem.setLayout(pnlTimKiemLayout);
        pnlTimKiemLayout.setHorizontalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem)
                .addContainerGap())
        );
        pnlTimKiemLayout.setVerticalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlNguoiHocLayout = new javax.swing.GroupLayout(pnlNguoiHoc);
        pnlNguoiHoc.setLayout(pnlNguoiHocLayout);
        pnlNguoiHocLayout.setHorizontalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNguoiHocLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddHocVien)
                .addContainerGap())
            .addComponent(pnlTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlNguoiHocLayout.setVerticalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoiHocLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(pnlTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(btnAddHocVien)
                .addContainerGap())
        );

        tabs.addTab("Người Học", new javax.swing.ImageIcon(getClass().getResource("/com/citd/Image/NguoiHocIcon.png")), pnlNguoiHoc); // NOI18N

        javax.swing.GroupLayout pnlBackGroundLayout = new javax.swing.GroupLayout(pnlBackGround);
        pnlBackGround.setLayout(pnlBackGroundLayout);
        pnlBackGroundLayout.setHorizontalGroup(
            pnlBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs)
                    .addGroup(pnlBackGroundLayout.createSequentialGroup()
                        .addGroup(pnlBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChuyenDe)
                            .addComponent(pnlChuyenDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(pnlBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBackGroundLayout.createSequentialGroup()
                                .addComponent(lblKhoaHoc)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(pnlKhoaHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlBackGroundLayout.setVerticalGroup(
            pnlBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChuyenDe)
                    .addComponent(lblKhoaHoc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlKhoaHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlChuyenDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackGround, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChuyenDeActionPerformed
        // TODO add your handling code here:
        this.fillComboBoxKhoaHoc();
    }//GEN-LAST:event_cboChuyenDeActionPerformed

    private void cboKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaHocActionPerformed
        // TODO add your handling code here:
        this.fillTableHocVien();
    }//GEN-LAST:event_cboKhoaHocActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        this.fillTableNguoiHoc();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnAddHocVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHocVienActionPerformed
        // TODO add your handling code here:
        this.addHocVien();
    }//GEN-LAST:event_btnAddHocVienActionPerformed

    private void btnRemoveHocVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveHocVienActionPerformed
        // TODO add your handling code here:
        this.removeHocVien();
    }//GEN-LAST:event_btnRemoveHocVienActionPerformed

    private void btnUpdateeDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateeDiemActionPerformed
        // TODO add your handling code here:
        if(this.CheckLoiTBLHocVien()==false){
            return;
        }
        this.updateDiem();
    }//GEN-LAST:event_btnUpdateeDiemActionPerformed

    private void rdoTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTatCaActionPerformed
        // TODO add your handling code here:
        fillTableHocVien();
    }//GEN-LAST:event_rdoTatCaActionPerformed

    private void rdoCoDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoCoDiemActionPerformed
        // TODO add your handling code here:
        fillTableHocVien();
    }//GEN-LAST:event_rdoCoDiemActionPerformed

    private void rdoChuaDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoChuaDiemActionPerformed
        // TODO add your handling code here:
        fillTableHocVien();
    }//GEN-LAST:event_rdoChuaDiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HocVienJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HocVienJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddHocVien;
    private javax.swing.JButton btnRemoveHocVien;
    private javax.swing.JButton btnUpdateeDiem;
    private javax.swing.ButtonGroup btng1;
    private javax.swing.JComboBox<String> cboChuyenDe;
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChuyenDe;
    private javax.swing.JLabel lblKhoaHoc;
    private javax.swing.JPanel pnlBackGround;
    private javax.swing.JPanel pnlChuyenDe;
    private javax.swing.JPanel pnlHocVien;
    private javax.swing.JPanel pnlKhoaHoc;
    private javax.swing.JPanel pnlNguoiHoc;
    private javax.swing.JPanel pnlTimKiem;
    private javax.swing.JRadioButton rdoChuaDiem;
    private javax.swing.JRadioButton rdoCoDiem;
    private javax.swing.JRadioButton rdoTatCa;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblHocVien;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    ChuyenDeDAO cddao = new ChuyenDeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();
    NguoiHocDAO nhdao = new NguoiHocDAO();
    HocVienDAO hvdao = new HocVienDAO();
    
    private void init() {
        setLocationRelativeTo(null);
        this.setIconImage(XImage.getAppIcon());
        tblHocVien.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblHocVien.getParent().setBackground(Color.WHITE);
        tblHocVien.getTableHeader().setPreferredSize(new Dimension(40, 40));
        tblHocVien.getColumnModel().getColumn(0).setMaxWidth(40);
        tblHocVien.getColumnModel().getColumn(1).setMaxWidth(70);
        tblHocVien.getColumnModel().getColumn(2).setMinWidth(90);
        tblHocVien.getColumnModel().getColumn(2).setMaxWidth(90);
        tblHocVien.setAutoCreateRowSorter(true);
        
        tblNguoiHoc.getTableHeader().setDefaultRenderer(new HeaderColor());
        tblNguoiHoc.getParent().setBackground(Color.WHITE);
        tblNguoiHoc.getTableHeader().setPreferredSize(new Dimension(40, 40));
        tblNguoiHoc.getColumnModel().getColumn(0).setMaxWidth(90);
        tblNguoiHoc.getColumnModel().getColumn(1).setMinWidth(150);
        tblNguoiHoc.getColumnModel().getColumn(2).setMaxWidth(70);
        tblNguoiHoc.setAutoCreateRowSorter(true);
        this.fillComboBoxChuyenDe();
    }
    
    private void fillComboBoxChuyenDe(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboChuyenDe.getModel();
        model.removeAllElements();
        List<ChuyenDe> list = cddao.selectAll();
        for(ChuyenDe cd : list){
            model.addElement(cd);
        }
        this.fillComboBoxKhoaHoc();
    }
    private void fillComboBoxKhoaHoc(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        model.removeAllElements();
        ChuyenDe chuyenDe = (ChuyenDe) cboChuyenDe.getSelectedItem();
        if(chuyenDe != null){
            List<KhoaHoc> list = khdao.selectByChuyenDe(chuyenDe.getMaCD());
            for(KhoaHoc kh : list){
                model.addElement(kh);
            }
        }
        this.fillTableHocVien();
    }
    private void fillTableHocVien(){
        DefaultTableModel model = (DefaultTableModel) tblHocVien.getModel();
        model.setRowCount(0);
        KhoaHoc khoaHoc =  (KhoaHoc) cboKhoaHoc.getSelectedItem();
        if(khoaHoc != null){
            List<HocVien> list = hvdao.selectByKhoaHoc(khoaHoc.getMaKH());
            for(int i = 0; i < list.size(); i++){
                HocVien hv = list.get(i);
                String hoten = nhdao.selectById(hv.getMaNH()).getHoTen();
                Object[] rows = {
                    i+1,
                    hv.getMaHV(),
                    hv.getMaNH(),
                    hoten,
                    hv.getDiem()
                };
//                model.addRow(new Object[]{
//                    i+1,
//                    hv.getMaHV(),
//                    hv.getMaNH(),
//                    hoten,
//                    hv.getDiem()
//                });
                if(rdoTatCa.isSelected()){
                    model.addRow(rows);
                }else if(rdoCoDiem.isSelected() && hv.getDiem()> 0){
                    model.addRow(rows);
                }else if(rdoChuaDiem.isSelected() && hv.getDiem() == 0){
                    model.addRow(rows);
                }
            }
        }
        this.fillTableNguoiHoc();
    }
    private void fillTableNguoiHoc(){
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        KhoaHoc khoaHoc = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        if(khoaHoc !=null){
            String keyword = txtTimKiem.getText();
            List<NguoiHoc> list = nhdao.selectNotInCourse(khoaHoc.getMaKH(), keyword);
            for(NguoiHoc nh : list){
                model.addRow(new Object[]{
                    nh.getMaNH(),
                    nh.getHoTen(), 
                    nh.getGioiTinh()? "Nam":"Nữ",
                    nh.getNgaySinh(), 
                    nh.getDienThoai(), 
                    nh.getEmail()
                });
            }
        }
              
    }
    private void removeHocVien(){
        if(!Auth.isManager()){
            MsgBox.alert(this, "Nhân viên không có quyền xóa !");
        }else{
            if(MsgBox.confirm(this, "Bạn muốn xóa các học viên được chọn ?")){
                for(int row : tblHocVien.getSelectedRows()){
                    Integer mahv = (Integer) tblHocVien.getValueAt(row, 1);
                    hvdao.delete(mahv);
                }
                this.fillTableHocVien();
            }
        }            
    }
    private void addHocVien(){
        KhoaHoc khoaHoc = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        for(int row : tblNguoiHoc.getSelectedRows()){
            HocVien hv = new HocVien();
            hv.setMaKH(khoaHoc.getMaKH());
            hv.setDiem(0);
            hv.setMaNH((String) tblNguoiHoc.getValueAt(row, 0));
            hvdao.insert(hv);
        }
        this.fillTableHocVien();
        this.tabs.setSelectedIndex(0);
    }
    private void updateDiem(){
        for(int i = 0; i < tblHocVien.getRowCount();i++){
            Integer mahv = (Integer) tblHocVien.getValueAt(i, 1);
            HocVien hv = hvdao.selectById(mahv);
            hv.setDiem(Double.parseDouble(tblHocVien.getValueAt(i, 4).toString()));
            hvdao.update(hv);
        }
        MsgBox.alert(this, "Cập nhật điểm thành công !");
    }
    private boolean CheckLoiTBLHocVien(){
        for (int i = 0; i < tblHocVien.getRowCount(); i++) {
            try {
                String temp2 = tblHocVien.getValueAt(i, 4).toString();
                if(temp2.length()==0){
                    MsgBox.alert(this, "Điểm không được để trống !");
                    return false;
                }
                double temp = Double.parseDouble(tblHocVien.getValueAt(i, 4).toString());
                if(temp < 0 || temp > 10){
                    tblHocVien.setRowSelectionInterval(i, i);
                    MsgBox.alert(this, "Điểm phải từ 0 - 10 !");
                    return false;
                }               
            } catch (Exception e) {
                tblHocVien.setRowSelectionInterval(i, i);
                MsgBox.alert(this, "Lỗi định dạng !");
                return false;
            }               
        }
        return true;
    }
    
}
